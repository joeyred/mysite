////
/// The Grid
///
/// A Flex based grid system with a wrapper > container > block convention.
///
/// @since 0.1.0
///

// TODO Document grid property mixin.
@mixin generate_grid-property($_prefix, $_class, $_property, $_value) {
  &.#{$_prefix}-#{$_class} {
    #{$_property}: #{$_value};
  }
}
// TODO Document no gutter mixin.
@mixin generate_grid-no-gutters($_prefix) {
  &.#{$_prefix}-no-gutters {
    .block {
      padding-left: 0;
      padding-right: 0;
    }
  }
}
// TODO Document grid block order mixin.
@mixin generate_grid-block-order($_prefix) {
  @for $_i from 1 through 12 {
    &.order-#{$_prefix}-#{$_i} {
      order: #{$_i};
    }
  }
}
// TODO Document block fixed width mixin.
@mixin generate_block-widths($_prefix) {
  @for $_i from 1 through 12 {

    $_fraction: $_i / 12;
    $_width: $_fraction * 100%;

    &.#{$_prefix}-#{$_i} {
      flex: 0 0 $_width;
      max-width: $_width;
    }
  }
}
// TODO Document flex property mixin.
@mixin generate_block-flex($_prefix) {
  @for $_i from 1 through 12 {
    &.#{$_prefix}-grow-#{$_i} {
      flex: $_i 0 auto;
    }

    &.#{$_prefix}-shrink-#{$_i} {
      flex: 0 $_i auto;
    }
  }
}
// TODO Document grid block style generator mixin.
@mixin generate_query-prefixed-block-styles {

  $_keys: map-keys($active-breakpoints);

  @each $_key in $_keys {

    $_is-active: map-get($active-breakpoints, $_key);

    @if $_is-active {
      @include mq($_key) {
        @include generate_block-widths($_key);
        @include generate_grid-block-order($_key);
        @include generate_block-flex($_key);
        // $prefix, $class, $property, $value
        @include generate_grid-property($_key, align-top, align-self, flex-start);
        @include generate_grid-property($_key, align-middle, align-self, center);
        @include generate_grid-property($_key, align-bottom, align-self, flex-end);
      }
    }
  }
}
// TODO Document grid container style generator mixin.
@mixin generate_query-prefixed-container-styles {

  $_keys: map-keys($active-breakpoints);

  @each $_key in $_keys {

    $_is-active: map-get($active-breakpoints, $_key);

    @if $_is-active {
      @include mq($_key) {
        // $prefix, $class, $property, $value
        // Flex Direction
        @include generate_grid-property($_key, row-reverse, flex-direction, row-reverse);
        @include generate_grid-property($_key, col, flex-direction, column);
        @include generate_grid-property($_key, col-reverse, flex-direction, column-reverse);
        // Flex Wrap
        @include generate_grid-property($_key, wrap, flex-wrap, wrap);
        @include generate_grid-property($_key, nowrap, flex-wrap, nowrap);
        @include generate_grid-property($_key, wrap-reverse, flex-wrap, wrap-reverse);
        // Align Items
        @include generate_grid-property($_key, align-top, align-items, flex-start);
        @include generate_grid-property($_key, align-middle, align-items, center);
        @include generate_grid-property($_key, align-bottom, align-items, flex-end);
        // Align content
        @include generate_grid-property($_key, align-left, align-content, flex-start);
        @include generate_grid-property($_key, align-center, align-content, center);
        @include generate_grid-property($_key, align-right, align-content, flex-end);
        @include generate_grid-property($_key, space-between, align-content, space-between);
        @include generate_grid-property($_key, space-around, align-content, space-around);
        @include generate_grid-property($_key, stretch, align-content, stretch);
        // No Gutter
        @include generate_grid-no-gutters($_key);
        // Full Width
        @include generate_grid-property($_key, full, max-width, 100%);
      }
    }
  }
}

.block {
  box-sizing: border-box;
  flex: 0 1 auto;
  max-width: 100%; // Keep the block respecting its container.
  padding: {
    left: $grid_gutter;
    right: $grid_gutter;
  }

  @include generate_query-prefixed-block-styles;
}

.wrapper {
  margin-right: auto;
  margin-left: auto;
}

.container {
  box-sizing: border-box;
  display: flex;
  flex: 0 1 auto;
  flex-flow: row wrap;
  max-width: $grid_container_max-width;
  margin-right: auto;
  margin-left: auto;

  @include generate_query-prefixed-container-styles;

  .block {
    > .container {
      margin: {
        left: -#{$grid_gutter};
        right: -#{$grid_gutter};
      }

      &.keep-gutters {
        margin: {
          left: 0;
          right: 0;
        }
      }
    }
  }
}
