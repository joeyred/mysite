////
/// Mixins
///
/// @since 1.0.0
///

////
/// Media Query Mixin for Breakpoints
///
/// @since 0.1.0
///
/// @param {String} $_bp - The key name for the breakpoint to be used.
///
@mixin mq($_bp) {
  // If passed breakpoint is currently enabled.
  @if map-get($active-breakpoints, $_bp) {
    // Get the value of the passed breakpoint.
    $current-bp: map-get($breakpoints, $_bp);
    // Generate the Media Query string.
    $current-media: bp($current-bp);
    // If `$current-media` is 0, thus false, then just spit the content out with no query,
    @if $current-media == false {
      @content;
    }
    // Else take the value of `$current-media`, use it to make the query, and put the
    // content inside the query.
    @else {
      @media screen and (#{$current-media}) { @content; }
    }
  }
  // Else throw a warning.
  @else {
    @warn '#{$_bp} is not an enabled breakpoint. Please check the $active-breakpoints map in _settings.scss.';
  }
}

////
/// Responsive Ratio
///
/// Use for creating scalable elements that must retain their ratio.
///
/// @since 1.0.0
///
@mixin responsive-ratio($_x,$_y, $_pseudo: false) {

  $_padding: unquote(( $_y / $_x ) * 100 + '%');

  @if $_pseudo {
    &::before {
      content: '';
      display: block;
      position: relative;
      width: 100%;
      padding-top: $_padding;
    }
  }

  @else {
    padding-top: $_padding;
  }
}

////
/// Placeholder Styling
///
/// @since 1.0.0
///
@mixin input-placeholder {
  &.placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
  &::-webkit-input-placeholder { @content; }
}
