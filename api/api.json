{
	"posts": {},
	"pens": {
		"fixed-backgrounds-on-mobile": {
			"code": {
				"styles": "<div class=\"block\"><h3>SCSS</h3><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">// This is what makes the background right here. </span>\n<span class=\"token selector\">html::before </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">content</span><span class=\"token punctuation\">:</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> block<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-image</span><span class=\"token punctuation\">:</span> <span class=\"token url\">url</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://images.unsplash.com/photo-1427694012323-fb5e8b0c165b'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-position</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-size</span><span class=\"token punctuation\">:</span> cover<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">height</span><span class=\"token punctuation\">:</span> 100vh<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100vw<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">top</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">bottom</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">left</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">right</span><span class=\"token punctuation\">:</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">position</span><span class=\"token punctuation\">:</span> fixed<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">z-index</span><span class=\"token punctuation\">:</span> -10<span class=\"token punctuation\">;</span> <span class=\"token comment\">// This is pretty important.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// This is just the stuff to make the pen look pretty.</span>\n<span class=\"token selector\">html </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"source sans pro\"</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 400<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #fdfdfd<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">h1, h2, h3 </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-family</span><span class=\"token punctuation\">:</span> lato<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 300<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-transform</span><span class=\"token punctuation\">:</span> uppercase<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">letter-spacing</span><span class=\"token punctuation\">:</span> 1px<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">a </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">text-decoration</span><span class=\"token punctuation\">:</span> none<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FFC74E<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">transition</span><span class=\"token punctuation\">:</span> color 200ms ease-in-out<span class=\"token punctuation\">;</span> \n  <span class=\"token selector\"><span class=\"token parent important\">&amp;</span>:hover, <span class=\"token parent important\">&amp;</span>:focus </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #C84EFF<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">hr </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> #555 1px solid<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.post </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.125rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.content </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">max-width</span><span class=\"token punctuation\">:</span> 50rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 auto<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.post-header-inner </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">display</span><span class=\"token punctuation\">:</span> flex<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">flex-flow</span><span class=\"token punctuation\">:</span> column nowrap<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">min-height</span><span class=\"token punctuation\">:</span> 25rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0.5rem 1.5rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-shadow</span><span class=\"token punctuation\">:</span> 0.5px 2px 2px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">,</span> 1<span class=\"token punctuation\">,</span> 1<span class=\"token punctuation\">,</span> 0.4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token selector\">h1 </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 2rem<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #A7DDFF<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">.post-date </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #B28B36<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">.post-meta </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">width</span><span class=\"token punctuation\">:</span> 100%<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin-top</span><span class=\"token punctuation\">:</span> auto<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #FFF<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">text-shadow</span><span class=\"token punctuation\">:</span> 1px 1.5px 4px <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>1<span class=\"token punctuation\">,</span> 1<span class=\"token punctuation\">,</span> 1<span class=\"token punctuation\">,</span> 0.8<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token selector\">.author-name </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-size</span><span class=\"token punctuation\">:</span> 1.3rem<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> 400<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token selector\">.post-content </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">background</span><span class=\"token punctuation\">:</span> <span class=\"token function\">rgba</span><span class=\"token punctuation\">(</span>0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0<span class=\"token punctuation\">,</span> 0.6<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">backdrop-filter</span><span class=\"token punctuation\">:</span> <span class=\"token function\">blur</span><span class=\"token punctuation\">(</span>18px<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1rem 1.5rem<span class=\"token punctuation\">;</span>\n    \n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">.note </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> #D3D3D3<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 3px solid red<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0.625rem<span class=\"token punctuation\">;</span>\n  <span class=\"token selector\">span </span><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">font-weight</span><span class=\"token punctuation\">:</span> bold<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> red<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token selector\">footer </span><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 1rem 1.5rem<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> #222<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding-bottom</span><span class=\"token punctuation\">:</span> 4rem<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div>"
			}
		}
	},
	"projects": {
		"about-this-site": {
			"content": "<div class=\"wrapper about-this-site\"><article><header class=\"header container\"><div class=\"block sm-12\"><h1>About This Site</h1></div><div class=\"block sm-12\"><div class=\"titled-callout\"><div class=\"titled-callout-heading\"><h2>The Intent</h2></div><div class=\"titled-callout-content-wrapper\"><div class=\"titled-callout-content\"><p>From the beginning I set out to build a website and brand that was truly \nreflective of me as a person, a developer, and a designer. Some major changes \nhappened along the way, and through all kinds of crazy ideas and firsts, a lot\nof knowledge and experience was gained. I really tried to accomplish things in\nways I just couldn't do for a typical client.</p></div></div></div></div></header><section class=\"opening container\"><div class=\"block sm-12\"><p>My goal became to write a site with no 3rd party dependencies for the deployed site. That way, I could not only show my ability to write something from scratch, but become a better developer, having dealt with many of the weird things third party libraries solve. So, while there may be a few more bugs here and there for me to flesh out and fix that I wouldn’t be dealing with had I used third party assets to support my live code, dealing with it all myself gives me a better understanding of web technologies, and gives me a better mindset to approach third party libraries with on other projects.</p>\n<p>This site was originally a Jekyll powered static site slaved to a gulp task runner file, and dependent on jQuery. Since then I switched to a fully gulpjs powered development and build environment, with some help from metalsmith, and got rid of jQuery completely.</p>\n</div></section><section class=\"major-components container\"><div class=\"block sm-12\"><h2>Major Components of this Site:</h2>\n<h3>On The Build/Dev Side</h3>\n<ul>\n<li>A gulp powered build, deploy, development, and testing environment.</li>\n<li>A rather strict, but readable, linting set up for JavaScript.</li>\n<li>A less strict, but common-mistake-avoiding linting set up for SCSS.</li>\n<li>Configuration type approach similar to Jekyll for managing the site build.</li>\n<li>JavaScript unit testing environment using Mocha, Chai, and Sinon.</li>\n<li>Babel to transpile ES6 to ES5 on both Javascript meant for the website, and the gulpfile.</li>\n<li>More tomfoolery than I ever thought I would have to put up with from myself.</li>\n</ul>\n<h3>The Site Itself</h3>\n<ul>\n<li>No third party dependencies! (don't know if this is the proper place for this or not?)</li>\n<li>A Modular JavaScript library written to be lightweight and extrememly flexible with powerful utilities.</li>\n<li>SCSS written from scratch with lots of helpful classes. Set up to be lightweight, but full featured for layouts.</li>\n<li>Truly built mobile-first, with some UI modules and utilites made specifically for making mobile browsing more barable and full featured.</li>\n</ul>\n</div></section><section class=\"javascript-library container\"><div class=\"block sm-12\"><h2>My own JavaScript library</h2>\n<p>I originally built the library around using jQuery, but after running into speed issues with one of the UI modules I was writing, I decided to go to just using vanilla JavaScript.\nIt was pretty soon after, that I decided to start using ES6 syntax as well. Basically, the whole experience really forced me to learn a lot about JavaScript that working with libraries had me rather ignorant to.</p>\n<p>The entirety of writing a library to support my website has been a pretty crazy adventure. I really have learned so much, which sadly can be a double edged sword, because I always have the urge to completely refactor everything into a more streamlined format.\nStill, the utilities I've written alone have been worth it in the end.</p>\n<p>I think my final version of the library, conceptually, breaks down into the core, helper utilites, UI module extensions, and the UI modules themselves.</p>\n<h3>The Core</h3>\n<p>Honestly there's nothing all that new or revolutionary here. It was never meant to be much more than a way to safely expose everything beyond their individual scopes.</p>\n<h3>Helper Utilities</h3>\n<p>These modules are mostly just functions that can be used in all kinds of ways to get common tasks done. There are some classes in here as well, but mostly the insatnce is constructed on the global object literal.</p>\n<h3>Extension Modules</h3>\n<p>These might be some of my favorite, conceptually speaking. The entire idea being to construct and insatnce of the extension class in the UI module constructor, pass the element that is passed to the UI module constructor, and have a bunch of stuff done for you by the extension, while exposing some helpful new methods for the UI module.</p>\n<p>A prime example of this would be my Responsive module, which uses my Breakpoints utility module to detect which breakpoint is currently active. so basically you automatically have access to the <code>data-responsive</code> attribute on the element and can use the options passed to it to determin when the component is active.\nThats a lot of lines of code to add to every module that needs that kind of functionality, but just construct an insatance of this extension and you have everything you need out of the box, but all the freedom in the world to impliment it as you need it.</p>\n<h3>UI Modules</h3>\n<p>I'm rather proud of some of the concepts I attempted to bring to life with my UI modules, outside of just some of the basics. While much of the power of any module in this kind of library lies in extentions, there is still plenty of room for a UI module to do some good as it is.\nThe idea of UI modules in this library was to keep them independent enough that a big cross-talk infastructure would never be required. In short, this was a \"get things done,\" kind of set up. Things have evolved a bit <em>(exibit A: extentions)</em>, but the concept remains.</p>\n<p>Probably the most \"out there\" module on this site is the Panes module. It's an ambitious approach to solving a lot of the big problems with mobile browsing, while making sure not to break native functionality in mobile browsers.\nThe entire point of the module was to bring content in and out of the viewport and allow it to be naturally scrolled as the main document, but being able to go back to previous content and end up right where you left off.</p>\n<p>To summerize: small screen experiences doesnt have to just be things on bigger screens stacking on top of each other to create a super long page the user must endlessly scroll through.</p>\n<p>That was the goal anyway.</p>\n<h3>Future Plans</h3>\n<p>I plan on making this library a seperate entity from this website and its repository. While doing that I plan to do a lot of refactoring, and a lot of updating to the current unit tests that exist already.</p>\n<p>One of the big projects in all of this will be the Panes module, as I really think there's a lot of potential if it's made a bit more stable, nestable, and flexible.</p>\n</div></section><section class=\"my-scss container\"><div class=\"block sm-12\"><h2>My own SCSS</h2>\n<h3>Resets</h3>\n<p>While I set out to attempt writting this all without any actual reset, sanatize, or normalize dependency, I did end up having to use some resets here and there. Some things you just can't avoid.</p>\n<h3>The grid</h3>\n<p>While it’s true that, “Everyone can make a grid.” The big reason I decided to make my own flex box grid was to simply have a better understanding of what goes into doing it.\nThis grid is a mixin heavy creation, that actually works pretty well in the end. I would like to experiment with a \"everything is a block\" type of approach and get rid of container elements all together.</p>\n<h3>Seperationg of UI components functionality and styling.</h3>\n<p>One big, more recent, effort of mine has been to seperate styles that make a UI component function, and what actually styles it into something visually pleasing.\nThis really isn't the easiest of things, since I tried rather hard to keep the JavaScript scope to pure state changing, so as to allow the SCSS to do as much of the work as possible to deal with that.\nDidn't always work out, but I think it's a good way to approach things regardless.</p>\n<h3>Animation</h3>\n<p>I really wanted to focus on unique animations in my site. Things that make you go \"woah\" but don't get in the way too much.\nThis is mostly comprised of using a lot of targeting data attributes with values that expose the current state of a component, and then trying to be clever with transition properties.</p>\n<p>The only time <code>@keyframe</code> animations were used was for the loading screen.</p>\n</div></section><section class=\"gulp-pipeline container\"><div class=\"block sm-12\"><h2>The gulp pipeline</h2>\n<h3>Config</h3>\n<p>The idea of this config was inspired by how Jekyll is set up. With my set up, there's a yaml file with config options, most of which are optional, and then there's a <code>generate-settings.js</code> module that takes that config and parses it into something usable for the gulp file. This includes setting defaults if certain options arent passed.\nThis module is imported into the gulp file and used throughout most of the tasks. This includes file paths, metadata for the site build, collection handling, and more.</p>\n<h3>Pug Templating</h3>\n<p>The whole reason I ended up doing so much of my own work building this pipeline and integrating Metalsmith as a gulp task was so I could use pug as my main templating langauge. I really like the idea of being able to template with javascript, as it is so much more flexible than things like liquid.\nWhile there are still some limitations, I'm pretty happy with how I am able to use pug. I even set things up so I could use Front Matter in files.</p>\n<a class=\"button\" href=\"https://github.com/joeyred/language-fm-pug\" target=\"_blank\">I even wrote a package for Atom to allow syntax highlighting of Front Matter in pug!</a><h3>Unit Testing</h3>\n<p>With the way thigns are set up, you can run gulp in a 100% JavaScript unit testing environment, with nothing but JavaScript for the site, unit tests, and a unit test server being active. You can also run just a development server for the site and the assets that go along with it. Finally, you can decide to run it all and have two servers running. One for unit testing, and one for the site. the watch task adapts to every situation.\nThis can all be accomplished with just passing option flags to the default gulp task.</p>\n<h3>Deployment</h3>\n<p>To get the site ready to deploy, I just pass a <code>production</code> option flag to the default gulp task, and once everything is properly built, I run my special task specifically for deploying to the <code>gh-pages</code> branch of the repository.\nI will never put the actual publishing task in the pipeline that generates the distribution version of the site. I like that part being a seperate action I must take myself.</p>\n</div></section></article></div>"
		},
		"cropshop": {
			"content": "<div class=\"wrapper cropshop\"><article class=\"container\"><header class=\"full-size-section header block sm-12 container\" id=\"overview\"><div class=\"block sm-12\"><h1 class=\"cropshop-title\">CropShop <small>For Shopify</small></h1></div><div class=\"images-container block sm-12\"><div class=\"images-inner\"><div class=\"image-foreground\"><div class=\"client-side-app\"><div class=\"screen\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/cropshop/CropShop_Demo.gif\"></div><div class=\"phone\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/cropshop/phone-model.svg\"></div></div></div><div class=\"image-background\"><div class=\"image-background-child admin-example-1\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/cropshop/tile-edit@2x.png\"></div><div class=\"image-background-child admin-example-2\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/cropshop/order-view@2x.png\"></div></div></div></div><div class=\"to-client-website block sm-12\"><a class=\"button\" href=\"https://picfoams.com\" target=\"_blank\">See it on PicFoams</a></div><div class=\"description block sm-12\"><p>Two apps built to add new major functionality to Picfoams Shopify website. Adding powerful image uploading and editing, as well as shopping cart integration  in the form of a client-side React app, and a way to properly manage custom products and retrieve print ready versions of the customer uploaded images for printing. \n</p></div></header><section class=\"full-size-section block sm-12 md-6 container sm-no-gutters colored-section yellow\" id=\"problem\"><div class=\"block sm-12\"><h2>The Problem</h2></div><div class=\"block sm-12\"><p>PicFoams previous solution for uploading and editing custom photos by customers to allow them to purchase custom printed wall tiles was hard to use, broken on smaller screens, and extremely cumbersome to manage. The process was also limited to uploading a single file at a time for each specific product, making it extremely time consuming for the customer.</p>\n<p>The Administration side of the app also created a new product for each custom image ordered as a tile, and thus created a hard to manage and cluttered expereince.</p>\n</div></section><section class=\"full-size-section block sm-12 md-6 container sm-no-gutters colored-section cyan\" id=\"solution\"><div class=\"block sm-12\"><h2>The Solution</h2></div><div class=\"block sm-12\"><p>Create a custom application to replace the previous one in use. This app would:</p>\n<ul>\n<li>Allow for multiple image uploads at a single time, as well as editing those images.</li>\n<li>Allow the user to add multiple items, and quantities of those items, to the shop cart.</li>\n<li>Create a way to add custom metafields to products in a quick and easy to manage UI.</li>\n<li>Provide product metadata for custom images without creating new products.</li>\n</ul>\n<p>The original intent was to have Filestack provide most of the overall functionality with their file picker widget, but it was quickly found that beyond file uploading, the rest simply couldn't be used in a way to achieve what the Client desired, and so a more custom solution was required.</p>\n</div></section><section class=\"container colored-section purple\" id=\"result\"><div class=\"block sm-12\"><h2>The Result</h2></div><div class=\"block sm-12\"><p>A duo of apps, both built with React, one a Shopify App, and the other meant to run on the shop website.</p>\n<h3>The App on the Shop</h3>\n</div><div class=\"block sm-12 mobile-demo-section\"><p>Powered by Filestack, The images would be uploaded, served, and edited via their quick and robust API. Integrated into a React and Redux powered client-side mini application. The new app is quick, easy, and gets customers adding multiple items to their cart without frustration.</p>\n<div class=\"mobile-demo-container\"><div class=\"client-side-app\"><div class=\"screen\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/cropshop/CropShop_Demo.gif\"></div><div class=\"phone\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/cropshop/phone-model.svg\"></div></div></div><p>This did require some creative solutions to get around Shopify's rather limited AJAX API, as well as having to use a mostly custom editor, as Filestack's editor could not provide the kind of functionality the Client wanted.</p>\n</div><div class=\"block sm-12\"><h3>The Shopify App</h3>\n<p>While it doesn't look like much, a decent amount went in to making a lot of things \"just work\" behind the scenes.</p>\n<ul>\n<li>Easy snippet generation for adding custom code to the site as needed.</li>\n<li>A page generated upon install that provides a custom AJAX API for product data required by the shop facing application.</li>\n<li>Injection of all required front-end assets.</li>\n<li>Custom button content blocks for use with Shopify's home page editor.</li>\n<li>A custom Order view page that showed all of the image uploads, with options to zip them all up and download them, or get them individually. This process also actively edited the metadata of the files so they would be 300dpi and be perfectly ready to just drop into the Client's printing program of choice without any further need for editing.</li>\n<li>A custom Product editing page to add required custom metafields to determine display and print dimensions of offered tile sizes.</li>\n<li>More stuff I'm not going to list in fear of invoking the PTSD from some of the more eye-twitching parts of this project!</li>\n</ul>\n</div><div class=\"block sm-12 admin-demo-section\"><h4>The Product Editing View</h4><img class=\"admin-example bottom-margin\" src=\"https://www.brianhayes.me/assets/imgs/projects/cropshop/tile-edit@2x.png\"><p>A simple UI. Select your collection of custom photo tile products, and then add in the proper dimensions.</p><p>Display is what the user sees, and Print is what is used for the actual aspect ratio.</p></div><div class=\"block sm-12 admin-demo-section\"><h4>The Order View</h4><img class=\"admin-example bottom-margin\" src=\"https://www.brianhayes.me/assets/imgs/projects/cropshop/order-view@2x.png\"><p>A super easy page to get all of the custom product images from each order. All without the need to generate a new product for each custom image.</p><p>The files are converted on the fly so there's no need to take up any CDN/Bucket storage than strictly necessary.</p></div></section></article></div>"
		},
		"hbgi": {
			"content": "<div class=\"wrapper hbgi\"><section class=\"header container\"><div class=\"block sm-12\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/header.svg\"></div></section><section class=\"container sm-no-gutters colors\"><div class=\"block sm-4\"><div class=\"color-segment color-white\"><span>FFFFFF</span></div></div><div class=\"block sm-4\"><div class=\"color-segment color-grey\"><span>454545</span></div></div><div class=\"block sm-4\"> <div class=\"color-segment color-turquois\"><span>1C8584</span></div></div></section><section class=\"container typography\"><div class=\"block sm-12\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/typography.svg\"></div></section><section class=\"container stationary\"><div class=\"block sm-12\"><div class=\"container business-cards\"><div class=\"block sm-12 md-6\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/bizcard_front.svg\"></div><div class=\"block sm-12 md-6\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/bizcard_back.svg\"></div></div><div class=\"container\"><div class=\"block sm-12\"><div class=\"letters\"><div class=\"letter letterhead\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/letterhead.png\"></div><div class=\"letter notepaper\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/notepaper.png\"></div><div class=\"letter fax\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/fax.png\"></div></div></div></div></div></section><section class=\"container icons\"><div class=\"block sm-6 md-4\"><img class=\"brand-icon\" src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/icon_product.svg\"></div><div class=\"block sm-6 md-4\"><img class=\"brand-icon\" src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/icon_phone.svg\"></div><div class=\"block sm-6 md-4\"><img class=\"brand-icon\" src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/icon_person.svg\"></div><div class=\"block sm-6 md-4\"><img class=\"brand-icon\" src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/icon_fax.svg\"></div><div class=\"block sm-6 md-4\"><img class=\"brand-icon\" src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/icon_arrow-down.svg\"></div><div class=\"block sm-6 md-4\"><img class=\"brand-icon\" src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/icon_mail.svg\"></div><div class=\"block sm-6 md-4\"><img class=\"brand-icon\" src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/icon_share.svg\"></div><div class=\"block sm-6 md-4\"><img class=\"brand-icon\" src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/icon_building.svg\"></div><section class=\"container site-demo\"><div class=\"block sm-12\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/hbgi/hbgi-site.gif\"></div></section></section></div>"
		},
		"mtap": {
			"content": "<div class=\"wrapper mtap\"><div class=\"container\"><div class=\"block sm-12\"><h1>Rebranding <abbr title=\"Independant Accountant's Association of Michigan\">IAAM</abbr>to<abbr title=\"Michigan Tax &amp; Accounting Professionals\">MTAP</abbr></h1></div><div class=\"block sm-12\"><h3>Client Website</h3><h4><a class=\"button\" href=\"https://www.michigantap.net\" alt=\"Michigan Tax &amp; Accounting Professionals\"> michigantap.net</a></h4><div class=\"basic-callout\"><p>This Website wasn't designed by me, I simply provided a detailed guide to changing the color scheme.\n</p></div></div><div class=\"block sm-12\"><h2>The Logos</h2><div class=\"container logo-comparison\"><div class=\"block sm-12\"><h3>From</h3></div><div class=\"block sm-12\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/mtap/IAAM_logo.png\"></div><div class=\"block sm-12\"><h3>To</h3></div><div class=\"block sm-12\"><img src=\"https://www.brianhayes.me/assets/imgs/projects/mtap/MTAP_logo-color.svg\"></div></div></div><div class=\"block sm-12\"><h2>Description</h2><p>A logo created to express community as well as capture the local roots of the \nassociation, formarly know as the Independant Accountants Association of \nMichigan. While the hands help express the \"community\" imagery in a way that is \neasy to understand by most anyone, they also hold a significance to \nMichiganders, as it reflects a common practice amoungst locals where putting \nhands in that position represents the shape of the state. Thus, the mark of the \nlogo is accessable by all, and still able to stike a chord with those in the \nassociations target demographic.</p><p>The fonts are meant to help add a more modern aspect to the brand, while still \nbeing professionally respectible.</p></div></div></div>"
		}
	},
	"javascript": {
		"animate": {
			"main": "<div class=\"container\"><div class=\"block\"><h2>Overview</h2>\n<p>This module adds two methods and a namespace to the Gingabulous global object.</p>\n<ul>\n<li>\n<p><code>registerAnimation()</code> - A function for registering custom globally accessable\nanimation functions meant to contain functionality to be executed durring the\nanimation process.</p>\n</li>\n<li>\n<p><code>animationSeries()</code> - A function for creating custom multi-step animations that go\nbeyond what CSS transitions or keyframe animations can accomplish.</p>\n</li>\n<li>\n<p><code>animations</code> - Object literal meant to serve as a namespace for\n<code>registerAnimation()</code> to add custom functions to.</p>\n</li>\n</ul>\n<p><strong>PLEASE NOTE:</strong> This module is very bare compared to extension modules. This keeps\neverything extreamely lean, however it becomes the developers responsibility to\nproperly impliment these methods and write the proper conditionals and attribute\nchecking/getting.</p>\n<h2>How to Use</h2>\n<h3>Registering Animation Functions</h3>\n<p>To register an animation fucntion simply call <code>registerAnimation()</code> and pass it the\nname you wish for the animation object key, and the function to be executed.</p>\n<p><strong>Example:</strong></p>\n<pre class=\"language-js\"><code class=\"language-js\">Gingabulous<span class=\"token punctuation\">.</span><span class=\"token function\">registerAnimation</span><span class=\"token punctuation\">(</span><span class=\"token string\">'exampleAnimation'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">element</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// custom functionality here</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<p>It's recommended that this be defined in your <code>app.js</code> file, or whatever such custom\nsite functionality file <strong>before</strong> the initialization function is executed for the\nlibrary.</p>\n<h3>Multi-Step Animations</h3>\n<p>the <code>animationSeries()</code> method takes 4 required arguments, with the 4th being the, at\nleast, one step of animation.</p>\n<ul>\n<li><code>element</code> - The DOM node that will be animated.</li>\n<li><code>baseCSSClass</code> - The base CSS class name that will be used to generate the animation\nCSS classes.</li>\n<li><code>hooks</code> - an object that can contain optional hooks for callbacks to be executed\nthroughout the animation process.</li>\n<li><code>steps</code> - this argument is handles as a rest param, thus allowing for as many steps\npassed as required.</li>\n</ul>\n<h4>The Hook Object</h4>\n<p>There are several hooks where a callback function can be applied in the animation\nprocess. This can be useful to execute functions that affect elements, or modules\noutside of the original scope of the passed DOM node object.</p>\n<p><strong>Available Hooks:</strong></p>\n<ul>\n<li><code>before</code> - Occures before the first frame of the entire animation series.</li>\n<li><code>beforeEachFrame</code>- Occures before every frame throughout the series.</li>\n<li><code>beforeEachStep</code> - Occures before each animation step in the series.</li>\n<li><code>afterEachFrame</code> - Occures after each frame throughout the series.</li>\n<li><code>afterEachStep</code> - Occures after each step in the series.</li>\n<li><code>after</code> - Occures after the very last frame in the entire animation series.</li>\n</ul>\n<h4>A Step Array</h4>\n<p>The step argument takes an array. Each array passed is considered a step.</p>\n<p>The array has two required arguments and a third optional argument that is a callback.</p>\n<ul>\n<li><code>stepClassName</code> - The name of the step to be used in generating the CSS class\napplied to the element.</li>\n<li><code>stepDurration</code> - The durration, in frames, of the animation step.</li>\n<li><code>callback</code> - an optional callback function to be executed at the end of the step.\nThe <code>element</code> argument is passed down to the callback by default.</li>\n</ul>\n<p><strong>Example:</strong></p>\n<pre class=\"language-js\"><code class=\"language-js\">Gingabulous<span class=\"token punctuation\">.</span><span class=\"token function\">animationSeries</span><span class=\"token punctuation\">(</span>\n  document<span class=\"token punctuation\">.</span><span class=\"token function\">querySelector</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.example'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'step-1'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">600</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'step-2'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">200</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">'final'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token number\">200</span><span class=\"token punctuation\">,</span>\n    <span class=\"token parameter\">element</span> <span class=\"token operator\">=&gt;</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Stuff to do for the final step.</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h3>Implimenting in a UI module</h3>\n<p>For a UI component to use these utilities the module must get the value of the passed\nelement's <code>data-animate</code> attribute, and use that value to access the animation\nmethod in the <code>animations</code> namespace.</p>\n<p><strong>Simplest Example:</strong></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleUIModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFunc <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-animation'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>However, it is not recommended to approach things this way. Instead, check if the\nattribute exists before trying to get anything from it.</p>\n<p><strong>Recommended Example:</strong></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleUIModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFunc <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-animation'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span>\n      element<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-animation'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n      <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>The next step is to execute the proper animation method in the modules events methods\nthat require the animation. It is also recommended here that all function calls are\ninside the proper conditional statements.</p>\n<p><strong>Recommended Example:</strong></p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">ExampleUIModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>element <span class=\"token operator\">=</span> element<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFunc <span class=\"token operator\">=</span> element<span class=\"token punctuation\">.</span><span class=\"token function\">hasAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-animation'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span>\n      element<span class=\"token punctuation\">.</span><span class=\"token function\">getAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'data-animation'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">:</span>\n      <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">_event</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFunc<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      Gingabulous<span class=\"token punctuation\">.</span>animations<span class=\"token punctuation\">[</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>animationFunc<span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n</div></div>"
		},
		"background": {
			"main": "<div class=\"container\"><div class=\"block\"></div></div>"
		},
		"card": {
			"main": "<div class=\"container\"><div class=\"block\"><h2>How to Use</h2>\n<p>To create an expandable card, an element but have a parent with a <code>.card</code> class, and <code>data-card</code> attribute, a child element with a <code>data-card-close</code>, and the last direct child element with a <code>.bottom-container</code> class.</p>\n<h3>Pug</h3>\n<p>A pug mixin exists to generate a card element. <a href=\"docs/pug/card/\">See the card mixin doc for more.</a></p>\n<p><strong>NOTE:</strong> <em>The mixin currently only supports the horizontal version of a card</em></p>\n<h3>Horizontal</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>card horizontal<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-card</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!-- Options Bar --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>card-options-bar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>icon-button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-card-close</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token comment\">&lt;!-- Icon Content... --&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      See More\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!-- Card Cover --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>card-cover<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!--- Content for the always visible part of the card. --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bottom-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!-- Content for the collapsed part of the card --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h3>Vertical</h3>\n<p>This is currently not supported.</p>\n</div></div>"
		},
		"breakpoints": {
			"main": "<div class=\"container\"><div class=\"block\"></div></div>"
		},
		"debug": {
			"main": "<div class=\"container\"><div class=\"block\"></div></div>"
		},
		"event": {
			"main": "<div class=\"container\"><div class=\"block\"><h2>Overview</h2>\n<p>The Event utility module is meant to allow for isolated UI modules to have access to\ndefined event listeners and be able to hook callbacks to those event listeners, without\nhaving to create their own duplicate event listener.</p>\n<p>This is all based on using two main methods. The <code>registerGlobalEventListener()</code> method\nto add an event to the <code>events</code> namespace, and construct a new instance of <code>EventListener</code>\non that new key. Doing so will expose the second main method, <code>registerCallback()</code>, which\ncan be used by modules to add callbacks to that event with a single listener.</p>\n<h2>How to Use</h2>\n<p>This is a rather simple utility to implement. In a module, instead of creating an event\nlistener for an event multiple modules would add their own listener to, first use the\n<code>registerGlobalEventListener()</code> method.</p>\n<h3>Registering the global event listener</h3>\n<h4>The Basic Use</h4>\n<pre class=\"language-js\"><code class=\"language-js\">Gingabulous<span class=\"token punctuation\">.</span><span class=\"token function\">registerGlobalEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4>How it Might Look in a Module</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyModule</span> <span class=\"token punctuation\">{</span>  \n  <span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Gingabulous<span class=\"token punctuation\">.</span><span class=\"token function\">registerGlobalEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<p>You don't have to worry about checking if that event already exists in the namespace, as\nthe method does that on it's own. If you would like, you can wrap your own conditional\naround the method call checking for the event to save it from being called at all if it\nhas, but this is purely a preference, and shouldn't impact speed of execution without it.</p>\n<h3>Registering a callback function to a defined event</h3>\n<p>The next step is then adding the callback function the module requires to be fired upon\nthe event being triggered.</p>\n<h4>The Basic Use</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">myCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My callback fired!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nGingabulous<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span>scroll<span class=\"token punctuation\">.</span><span class=\"token function\">registerCallback</span><span class=\"token punctuation\">(</span>myCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre>\n<h4>How it Might Look in a Module</h4>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyModule</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">myCallback</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'My callback fired!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token function\">events</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    Gingabulous<span class=\"token punctuation\">.</span><span class=\"token function\">registerGlobalEventListener</span><span class=\"token punctuation\">(</span><span class=\"token string\">'scroll'</span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    Gingabulous<span class=\"token punctuation\">.</span>events<span class=\"token punctuation\">.</span>scroll<span class=\"token punctuation\">.</span><span class=\"token function\">registerCallback</span><span class=\"token punctuation\">(</span>myCallback<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h2>API</h2>\n<h3><code>registerGlobalEventListener(name, element, listener)</code></h3>\n<ul>\n<li><code>name</code> - <em>String</em> - The name of the lister. This is used for the name of the key the\n<code>EventListener</code> instance will be constructed on, as well as the value of the actual event\nthe listener will be placed on, if no value is passed to the <code>listener</code> param.</li>\n<li><code>element</code> - <em>Node</em> - the element to place the listener on.</li>\n<li><code>listener</code> - <em>String</em> - OPTIONAL - The event name to be passed to the <code>addEventListener</code>\nmethod.</li>\n</ul>\n<h3><code>registerCallback(callback)</code></h3>\n<ul>\n<li><code>callback</code> - <em>Function</em> - The function to be fired when the event is triggered.</li>\n</ul>\n</div></div>"
		},
		"expand": {
			"main": "<div class=\"container\"><div class=\"block\"></div></div>"
		},
		"inject": {
			"main": "<div class=\"container\"><div class=\"block\"><h2>Overview</h2>\n<p>This module is meant to add usable methods and data attributes to a UI module for\ninjecting dynamic content into specified containers.</p>\n<h2>How to Use</h2>\n<h3>In a Module</h3>\n<p>This module is meant to be constructed inside a UI modules constructor, and passed\nthe <code>element</code> DOM object passed to the UI modules constructor. This gives access to\nthe exposed methods of the Inject module, as well as all availbale data attributes.</p>\n<p>The example below shows the simplist way to extend a UI module with the Inject module:</p>\n<pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">element<span class=\"token punctuation\">,</span> options</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>inject <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Gingabulous<span class=\"token punctuation\">.</span>Inject</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n</code></pre>\n<h3>In Markup</h3>\n<p>The Inject module automatically adds the ability to use new data attributes. The\nattributes listed are the default values.</p>\n<ul>\n<li><code>data-inject-api</code> - This attribute is used to get the file the API should come from. This is currently meant for JSON files only, and while an external URL could be passed, it has only been used to pull local files.</li>\n<li><code>data-inject-container</code> -</li>\n<li><code>data-inject-content</code></li>\n<li><code>data-inject-bind</code></li>\n</ul>\n<h3>API</h3>\n<h4><code>updateContent(key)</code></h4>\n<p>This module has one method to be used within the parent UI module it is extending.\nThe method takes a single argument, <code>key</code>, which must be a string of the object key,\nor the chain.</p>\n<p><em>NOTE: do not include the parent object of the chain.\nJust the cahin within the object.</em></p>\n</div></div>"
		},
		"responsive": {
			"main": "<div class=\"container\"><div class=\"block\"></div></div>"
		},
		"panes": {
			"main": "<div class=\"container\"><div class=\"block\"></div></div>"
		}
	},
	"pug": {
		"card": {
			"main": "<div class=\"container\"><div class=\"block\"><h2>Overview</h2>\n<p>The card mixin is meant to take a data object and turn it into a full card component.\nThe mixin was written to take a file object from a collection, thus making it ideal for\niteration.</p>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token name function\">+card</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> options<span class=\"token punctuation\">)</span></span>\n</code></pre>\n<h2>Params</h2>\n<h3><code>data</code></h3>\n<table>\n<thead>\n<tr>\n<th>Params</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>path</code></td>\n<td><em>String</em></td>\n<td>The relative filepath of the post this card represents.</td>\n</tr>\n<tr>\n<td><code>type</code></td>\n<td><em>String</em></td>\n<td>The type of post this card represents.</td>\n</tr>\n<tr>\n<td><code>title</code></td>\n<td><em>String</em></td>\n<td>The title of the card.</td>\n</tr>\n<tr>\n<td><code>description</code></td>\n<td><em>String</em></td>\n<td>Description for the card.</td>\n</tr>\n<tr>\n<td><code>thumbnail</code></td>\n<td><em>Object</em></td>\n<td>Object containing data for the thumbnail.</td>\n</tr>\n<tr>\n<td><code>thumbnail.image</code></td>\n<td><em>String</em></td>\n<td>image path for the <code>src</code> attribute of the <code>img</code> element.</td>\n</tr>\n<tr>\n<td><code>thumbnail.title</code></td>\n<td><em>String</em></td>\n<td>title of the image for the <code>title</code> attribute.</td>\n</tr>\n<tr>\n<td><code>thumbnail.description</code></td>\n<td><em>String</em></td>\n<td>description of the image for the <code>alt</code> attribute.</td>\n</tr>\n<tr>\n<td><code>tags</code></td>\n<td><em>Array</em></td>\n<td>array of tags for the represented post.</td>\n</tr>\n<tr>\n<td><code>api</code></td>\n<td><em>Object</em></td>\n<td>an object containing API specific data.</td>\n</tr>\n<tr>\n<td><code>api.namespace</code></td>\n<td><em>String</em></td>\n<td>the namespace to use to generate the proper <code>data-inject</code> value.</td>\n</tr>\n</tbody>\n</table>\n<h3><code>options</code></h3>\n<table>\n<thead>\n<tr>\n<th>Params</th>\n<th>Type</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>responsive</code></td>\n<td><em>String</em></td>\n<td>String passed to the <code>data-responsive</code> attribute. see <a href=\"/docs/javascript/responsive/\">The JavaScript Responsive Module Doc</a> for more info.</td>\n</tr>\n<tr>\n<td><code>animation</code></td>\n<td><em>String</em></td>\n<td>String passed to <code>data-animation</code> attribute. See <a href=\"/docs/javascript/animate/\">The JavaScript Animation Module</a> for more info.</td>\n</tr>\n<tr>\n<td><code>classes</code></td>\n<td><em>String</em></td>\n<td>any css classes that should be added to the parent element.</td>\n</tr>\n<tr>\n<td><code>horizontal</code></td>\n<td><em>Boolean</em></td>\n<td>whether the card should have a horizontal or vertical layout. <em>NOTE</em>: This defaults to <code>true</code>, but as of now there are no styles to handle a vertical layout should this be set to <code>false</code>.</td>\n</tr>\n</tbody>\n</table>\n<h2>How To Use</h2>\n<p>Due to the way the mixin is set up to take a big data object, it's best to use\ncollection data and iterate over it. Blow is an example of the kind of data this\nmixin takes.</p>\n<h3>Pug</h3>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token punctuation\">-</span>\n  <span class=\"token tag\">var</span> <span class=\"token plain-text\">data = {</span>\n    <span class=\"token tag\">path<span class=\"token punctuation\">:</span></span> '/projects/example<span class=\"token punctuation\">.</span>html',\n    <span class=\"token tag\">type<span class=\"token punctuation\">:</span></span> 'project',\n    <span class=\"token tag\">title<span class=\"token punctuation\">:</span></span> 'Example',\n    <span class=\"token tag\">description<span class=\"token punctuation\">:</span></span> 'A fun description of stuff<span class=\"token punctuation\">.</span>',\n    <span class=\"token tag\">thumbnail<span class=\"token punctuation\">:</span></span> {\n      <span class=\"token tag\">image<span class=\"token punctuation\">:</span></span> 'path/to/image<span class=\"token punctuation\">.</span>png',\n      <span class=\"token tag\">title<span class=\"token punctuation\">:</span></span> 'Example Preview',\n      <span class=\"token tag\">description<span class=\"token punctuation\">:</span></span> 'A preview of the Example Post'\n    },\n    <span class=\"token tag\">tags<span class=\"token punctuation\">:</span></span> ['foo', 'bar'],\n    <span class=\"token tag\">api<span class=\"token punctuation\">:</span></span> {\n      <span class=\"token tag\">namespace<span class=\"token punctuation\">:</span></span> 'projects'\n    }\n  }\n\n<span class=\"token mixin\"><span class=\"token name function\">+card</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> <span class=\"token string\">'a-sepcial-class'</span><span class=\"token punctuation\">)</span></span>\n</code></pre>\n<h3>Output</h3>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>card horizontal a-special-class<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-card</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!-- Options Bar --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>card-options-bar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>icon-button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-card-close</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token comment\">&lt;!-- Icon Content... --&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-inject</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>projects.example<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      See More\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!-- Card Cover --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>card-cover<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!-- Thumbnail --&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>card-thumbnail<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>path/to/image.png<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">title</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Example Preview<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>A preview of the Example Post<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!-- Info --&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>card-info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token comment\">&lt;!-- Title --&gt;</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token comment\">&lt;!-- Tags --&gt;</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>tags-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>tags<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>foo<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span><span class=\"token punctuation\">&gt;</span></span>bar<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!-- Description Content Container --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>bottom-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n      A fun description of stuff.\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h2>Notes</h2>\n<ul>\n<li><em>The <code>horizontal</code> param, while handling the boolean passed to it just fine, currently\ncreates a css class output that will basically break it if you pass <code>false</code> to it. The\nstyles were originally written, but have since been removed after the component had a\nmajor style overhaul. The vertical version of a card is still planned to happen, but not\nuntil it's actually needed.</em></li>\n</ul>\n</div></div>"
		},
		"icon": {
			"main": "<div class=\"container\"><div class=\"block\"><h2>Overview</h2>\n<p>This mixin is meant to generate an svg icon element.</p>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token name function\">+icon</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span></span>\n</code></pre>\n<h2>Params</h2>\n<ul>\n<li><code>name</code> - the name of the icon to output.</li>\n</ul>\n<h2>How to Use</h2>\n<p>Just pass the name of the icon you want to output. If the icon doesn't exist an error\nelement will be outputted instead.</p>\n<h3>Available Icons</h3>\n<h3>Basic</h3>\n<ul>\n<li><code>menu</code></li>\n<li><code>close</code></li>\n<li><code>check</code></li>\n<li><code>arrow-left</code></li>\n<li><code>arrow-right</code></li>\n</ul>\n<h3>Social Media</h3>\n<ul>\n<li><code>behance</code></li>\n<li><code>codepen</code></li>\n<li><code>facebook</code></li>\n<li><code>twitter</code></li>\n<li><code>github</code></li>\n<li><code>instagram</code></li>\n<li><code>linkedin</code></li>\n<li><code>pinterest</code></li>\n<li><code>stackoverflow</code></li>\n<li><code>youtube</code></li>\n<li><code>vimeo</code></li>\n</ul>\n<h3>Specialized</h3>\n<ul>\n<li><code>info</code></li>\n<li><code>code</code></li>\n</ul>\n</div></div>"
		},
		"pane": {
			"main": "<div class=\"container\"><div class=\"block\"><h2>Overview</h2>\n<p>Generates a pane component to be used with the <code>Panes</code> and <code>Pane</code> UI modules.</p>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token name function\">+pane</span><span class=\"token punctuation\">(</span>id<span class=\"token punctuation\">,</span> position<span class=\"token punctuation\">,</span> classes<span class=\"token punctuation\">,</span> dataAtts<span class=\"token punctuation\">)</span></span>\n</code></pre>\n<h2>Params</h2>\n<ul>\n<li><code>id</code> - <em>String</em> - the ID for the pane that will be passed to the <code>data-pane</code>\nattribute.</li>\n<li><code>position</code> - <em>String</em> - position of the pane off-canvas. accepts: <code>above</code>, <code>below</code>,\n<code>right</code>, <code>left</code>.</li>\n<li><code>classes</code> - <em>String</em> - any css classes to be added to the parent element.</li>\n<li><code>dataAtts</code> - <em>Object</em> - data attributes pertaining to module extensions, such as the <code>Responsive</code>, or <code>Inject</code> extension modules.</li>\n<li><code>dataAtts.api</code> - <em>String</em> - The filename of the api file.</li>\n<li><code>dataAtts.responsive</code> - <em>String</em> - breakpoint string keys to populate the value of\nthe <code>data-responsive</code> attribute.</li>\n</ul>\n<h2>How to Use</h2>\n<p>All this mixin requires is the <code>id</code> and <code>position</code> params to output a useable\ncomponent. For the content of the pane, simply pass markup to the block of the mixin.</p>\n<h3>Basic Usage</h3>\n<h4>Pug</h4>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token name function\">+pane</span><span class=\"token punctuation\">(</span><span class=\"token string\">'example'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'right'</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token tag\">article.example-stuff</span>\n    <span class=\"token tag\">h3</span> <span class=\"token plain-text\">Hello</span>\n    <span class=\"token tag\">p</span> <span class=\"token plain-text\">This is content.</span>\n</code></pre>\n<h4>Output</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>pane right<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-pane</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>example<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token comment\">&lt;!-- Pane Header --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>pane-header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>top-bar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>left<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>icon-button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-pane-close</span><span class=\"token punctuation\">&gt;</span></span>\n          <span class=\"token comment\">&lt;!-- Close Icon --&gt;</span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!-- Pane Content --&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>pane-content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token comment\">&lt;!-- Block Contents --&gt;</span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>article</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>example-stuff<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span><span class=\"token punctuation\">&gt;</span></span>Hello<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">&gt;</span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n          This is content.\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>article</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n</div></div>"
		},
		"skill": {
			"main": "<div class=\"container\"><div class=\"block\"><h2>Overview</h2>\n<p>Generate a titled progress bar, meant for displaying skill proficiencies.</p>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token name function\">+skill</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> rating<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">)</span></span>\n</code></pre>\n<h2>Params</h2>\n<ul>\n<li><code>title</code> - <em>String</em> - The title of the skill.</li>\n<li><code>rating</code> - <em>Number</em> - Skill rating out of 100.</li>\n<li><code>color</code> - <em>String</em> - Color class to be applied to the element.</li>\n</ul>\n<h2>How to Use</h2>\n<p>Simply include the params and the component will output the proper markup. The only\noptional param is <code>color</code>.</p>\n<h3>Basic</h3>\n<h4>Pug</h4>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token name function\">+skill</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Example'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">80</span><span class=\"token punctuation\">,</span> blue<span class=\"token punctuation\">)</span></span>\n</code></pre>\n<h4>Output</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>skill blue<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>title<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>rating<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>meter<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>width: 80%<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n</div></div>"
		},
		"social-icon-bar": {
			"main": "<div class=\"container\"><div class=\"block\"><h2>Overview</h2>\n<p>This mixin outputs an icon bar for social media icons. Each of these icons are\nhyperlinks as well. The links are automatically populated from the <code>config.yml</code> file.\nAs long as the key in the <code>social</code> object in that file matches an icon name passed to\nthe mixin, the value of the config key will populate the <code>href</code> attribute.</p>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token name function\">+socialIconBar</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>icons<span class=\"token punctuation\">)</span></span>\n</code></pre>\n<h2>Params</h2>\n<ul>\n<li><code>...icons</code> - <em>Rest</em> - pass as many icon name string params as you want. This is what will be used to populate the icon bar.</li>\n</ul>\n<h2>How to Use</h2>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token name function\">+socialIconBar</span><span class=\"token punctuation\">(</span><span class=\"token string\">'facebook'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'twitter'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'github'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'stackoverflow'</span><span class=\"token punctuation\">)</span></span>\n</code></pre>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>icon-bar<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>link/to/facebook/profile<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!-- Facebook Icon --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>link/to/twitter/profile<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!-- Twitter Icon --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>link/to/github/profile<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!-- Github Icon --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>link/to/stackoverflow/profile<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">target</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>_blank<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>icon<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token comment\">&lt;!-- Stack Overflow Icon --&gt;</span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n</div></div>"
		},
		"titled-callout": {
			"main": "<div class=\"container\"><div class=\"block\"><h2>Overview</h2>\n<p>This mixin generates a Titled Callout component.</p>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token name function\">+titledCallout</span><span class=\"token punctuation\">(</span>title<span class=\"token punctuation\">,</span> color<span class=\"token punctuation\">,</span> expandable<span class=\"token punctuation\">,</span> breakpoints<span class=\"token punctuation\">,</span> animation<span class=\"token punctuation\">)</span></span>\n</code></pre>\n<h3>Params</h3>\n<ul>\n<li><code>title</code> - <em>String</em> - The title to be displayed.</li>\n<li><code>color</code> - <em>String</em> - The color class to be applied to the parent element</li>\n<li><code>expandable</code> - <em>Boolean</em> - Whether or not the component can expand and collapse using the <code>Expand</code>\nJavaScript module.</li>\n<li><code>breakpoints</code> - <em>String</em> - The breakpoint string to pass to the <code>data-responsive</code> attribute.</li>\n<li><code>animation</code> - <em>String</em> - animation to use according to registered animations via the <code>Animate</code>\nJavaScript utility module.</li>\n</ul>\n<h2>How To Use</h2>\n<p>The bare minimum to make a pane output properly is the <code>title</code>, and <code>color</code>, params.</p>\n<h3>Basic Example</h3>\n<h4>pug</h4>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token name function\">+titledCallout</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is an Example'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token tag\">p</span> <span class=\"token plain-text\">The content goes right here, since this mixin can handle a content block</span>\n</code></pre>\n<h4>Result</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>titled-callout red<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>titled-callout-heading<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>This is an Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>titled-callout-content-wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>titled-callout-content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n        The content goes right here, since this mixin can handle a content block\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n<h3>Advanced Example</h3>\n<h4>Pug</h4>\n<pre class=\"language-pug\"><code class=\"language-pug\"><span class=\"token mixin\"><span class=\"token name function\">+titledCallout</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This is an Example'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'lg-down'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'animationName'</span><span class=\"token punctuation\">)</span></span>\n  <span class=\"token tag\">p</span> <span class=\"token plain-text\">The content goes right here, since this mixin can handle a content block</span>\n</code></pre>\n<h4>Result</h4>\n<pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>titled-callout red expandable<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-expand</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>active<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-responsive</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>lg-down<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-animation</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>animationName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>titled-callout-heading<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span><span class=\"token punctuation\">&gt;</span></span>This is an Example<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>icon-button<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-expand-close</span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token comment\">&lt;!-- Close Icon --&gt;</span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>titled-callout-content-wrapper expandable-content<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-expand-close</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>titled-callout-content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n        The content goes right here, since this mixin can handle a content block\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre>\n</div></div>"
		}
	}
}